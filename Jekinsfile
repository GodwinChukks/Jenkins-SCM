pipeline {
    agent any

    parameters {
        string(name: 'BRANCH', defaultValue: 'main', description: 'Git branch to build from')
    }

    environment {
        IMAGE_TAG = "godwinchukks/godwin_image:${BUILD_NUMBER}"     // Unique tag per build
        CONTAINER_NAME = "godwin_container"
    }

    stages {
        stage('checkout scmGit(branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/GodwinChukks/Jenkins-SCM.git']])') {
            steps {
                echo "Cloning branch: ${params.BRANCH}"
                checkout scmGit(
                    branches: [[name: "*/${params.BRANCH}"]],
                    userRemoteConfigs: [[url: 'https://github.com/GodwinChukks/Jenkins-SCM.git']]
                )
            }
        }

        stage('Run Tests') {
            steps {
                echo 'Running basic test checks...'
                sh 'ls -la'
                sh 'echo "Workspace files listed successfully."'
            }
        }

        stage('Build Docker Image') {
            steps {
                echo "Building Docker image: $IMAGE_TAG"
                sh "docker build -t $IMAGE_TAG ."
            }
        }

        stage('Debug Environment') {
            steps {
                echo 'Showing environment variables...'
                sh 'env'
            }
        }

        stage('Cleanup Container') {
            steps {
                echo "Checking for existing container: $CONTAINER_NAME"
                sh """
                    docker stop $CONTAINER_NAME || true
                    docker rm $CONTAINER_NAME || true
                """
            }
        }

        stage('Run Docker Container') {
            steps {
                echo "Launching container: $CONTAINER_NAME"
                sh "docker run -itd --name $CONTAINER_NAME -p 8081:80 $IMAGE_TAG"
            }
        }

        stage('Push to Docker Hub') {
            steps {
                echo "Pushing image to Docker Hub..."
                withCredentials([
                    usernamePassword(credentialsId: 'dockerhub-creds', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')
                ]) {
                    sh "echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin"
                    sh "docker push $IMAGE_TAG"
                }
            }
        }
    }

    post {
        success {
            echo "✅ Jenkins pipeline complete. Image $IMAGE_TAG successfully pushed to Docker Hub!"
        }
        failure {
            echo "❌ Pipeline failed. Review logs for issues and try again."
        }
    }
}
